import PDFDocument from 'pdfkit';

export async function generatePDFReport(reportData: any, userName: string): Promise<Buffer> {
  return new Promise((resolve, reject) => {
    try {
      const doc = new PDFDocument({ margin: 50, size: 'A4' });
      const buffers: Buffer[] = [];

      doc.on('data', (buffer) => buffers.push(buffer));
      doc.on('end', () => resolve(Buffer.concat(buffers)));

      // Header
      doc.fontSize(24).fillColor('#2563eb').text('360° Insight Report', { align: 'center' });
      doc.fontSize(16).fillColor('#64748b').text(`${userName}`, { align: 'center' });
      doc.moveDown(2);

      // Metadata
      doc.fontSize(12).fillColor('#64748b')
         .text(`Generated: ${new Date(reportData.metadata.generatedAt).toLocaleDateString()}`)
         .text(`Responses: ${reportData.metadata.totalResponses}`)
         .text(`AI Mentor: ${reportData.metadata.mentor}`)
         .moveDown(1.5);

      // Personality Section
      doc.fontSize(18).fillColor('#1e293b').text('Personality Snapshot', { underline: true });
      doc.moveDown(0.5);
      
      if (reportData.personality) {
        doc.fontSize(14).fillColor('#2563eb').text(`MBTI: ${reportData.personality.mbtiInference}`);
        doc.fontSize(12).fillColor('#64748b').text(reportData.personality.mbtiDescription);
        doc.moveDown(0.5);
        
        doc.fontSize(14).fillColor('#7c3aed').text(`Archetype: ${reportData.personality.coreArchetype}`);
        doc.fontSize(12).fillColor('#64748b').text(reportData.personality.archetypeDescription);
        doc.moveDown(0.5);
        
        if (reportData.personality.keyTraits) {
          doc.fontSize(12).fillColor('#1e293b').text('Key Traits: ' + reportData.personality.keyTraits.join(', '));
        }
      }
      doc.moveDown(1.5);

      // Strengths Section
      doc.fontSize(18).fillColor('#1e293b').text('Strengths & Superpowers', { underline: true });
      doc.moveDown(0.5);
      
      if (reportData.strengths) {
        reportData.strengths.forEach((strength: any) => {
          doc.fontSize(14).fillColor('#059669').text(`• ${strength.title}`);
          doc.fontSize(12).fillColor('#64748b').text(`  ${strength.description}`);
          if (strength.frequency) {
            doc.fontSize(10).fillColor('#059669').text(`  ${strength.frequency}`);
          }
          doc.moveDown(0.3);
        });
      }
      doc.moveDown(1);

      // Blind Spots Section  
      doc.fontSize(18).fillColor('#1e293b').text('Blind Spots & Growth Areas', { underline: true });
      doc.moveDown(0.5);
      
      if (reportData.blindSpots) {
        reportData.blindSpots.forEach((blindSpot: any) => {
          doc.fontSize(14).fillColor('#dc2626').text(`• ${blindSpot.title}`);
          doc.fontSize(12).fillColor('#64748b').text(`  ${blindSpot.description}`);
          if (blindSpot.frequency) {
            doc.fontSize(10).fillColor('#dc2626').text(`  ${blindSpot.frequency}`);
          }
          doc.moveDown(0.3);
        });
      }
      doc.moveDown(1);

      // Mentor Commentary
      if (reportData.mentorCommentary) {
        doc.fontSize(18).fillColor('#1e293b').text('AI Mentor Insight', { underline: true });
        doc.moveDown(0.5);
        doc.fontSize(12).fillColor('#64748b').text(`"${reportData.mentorCommentary}"`, { 
          italic: true,
          width: 500,
          align: 'justify'
        });
        doc.moveDown(1);
      }

      // Action Steps
      if (reportData.actionSteps) {
        doc.addPage();
        doc.fontSize(18).fillColor('#1e293b').text('Your Growth Roadmap', { underline: true });
        doc.moveDown(0.5);

        if (reportData.actionSteps.thisWeek) {
          doc.fontSize(16).fillColor('#7c3aed').text('This Week');
          doc.moveDown(0.3);
          reportData.actionSteps.thisWeek.forEach((step: string) => {
            doc.fontSize(12).fillColor('#64748b').text(`• ${step}`);
          });
          doc.moveDown(1);
        }

        if (reportData.actionSteps.thisMonth) {
          doc.fontSize(16).fillColor('#7c3aed').text('This Month');
          doc.moveDown(0.3);
          reportData.actionSteps.thisMonth.forEach((step: string) => {
            doc.fontSize(12).fillColor('#64748b').text(`• ${step}`);
          });
          doc.moveDown(1);
        }

        if (reportData.actionSteps.nextQuarter) {
          doc.fontSize(16).fillColor('#7c3aed').text('Next Quarter');
          doc.moveDown(0.3);
          reportData.actionSteps.nextQuarter.forEach((step: string) => {
            doc.fontSize(12).fillColor('#64748b').text(`• ${step}`);
          });
        }
      }

      // Footer
      doc.fontSize(10).fillColor('#64748b')
         .text('Generated by InsightEngine - 360° Self-Insight Platform', { 
           align: 'center',
           y: doc.page.height - 80
         });

      doc.end();
    } catch (error) {
      reject(error);
    }
  });
}
